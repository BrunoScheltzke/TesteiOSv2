//
//  LoginViewController.swift
//  TesteiOSv2
//
//  Created by Bruno on 09/11/18.
//  Copyright (c) 2018 Bruno Scheltzke. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class {
    func displayExistingLoginInfo(viewModel: Login.ExistingInfo.ViewModel)
    func displayLoginErrorMessage(viewModel: Login.Login.ViewModel)
    func displaySuccessfullLogin(viewModel: Login.Login.ViewModel)
}

class LoginViewController: UIViewController, LoginDisplayLogic {
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
    
    // MARK: Outlets
    @IBOutlet weak var userNameTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    @IBOutlet weak var loginButton: UIButton!
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        verifyExistingLoginInfo()
    }
    
    // MARK: Do something
    
    @IBAction func loginButtonTapped(_ sender: Any) {
    }
    
    func verifyExistingLoginInfo()
    {
        let request = Login.ExistingInfo.Request()
        interactor?.verifyExistingLoginInfo(request: request)
    }
    
    func displayExistingLoginInfo(viewModel: Login.ExistingInfo.ViewModel)
    {
        userNameTextField.text = viewModel.userName
        passwordTextField.text = viewModel.password
    }
    
    func displayLoginErrorMessage(viewModel: Login.Login.ViewModel) {}
    
    func displaySuccessfullLogin(viewModel: Login.Login.ViewModel) { }
}
