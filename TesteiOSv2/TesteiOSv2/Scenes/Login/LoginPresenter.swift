//
//  LoginPresenter.swift
//  TesteiOSv2
//
//  Created by Bruno on 09/11/18.
//  Copyright (c) 2018 Bruno Scheltzke. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginPresentationLogic {
    func presentExistentLoginInfo(response: Login.ExistingInfo.Response)
    func presentLoginErrorMessage(response: Login.Login.Response)
    func presentLoginSuccesfull(response: Login.Login.Response)
}

class LoginPresenter: LoginPresentationLogic {
    weak var viewController: LoginDisplayLogic?

    func presentExistentLoginInfo(response: Login.ExistingInfo.Response) {
        if let userName = response.userName,
            let password = response.password {
            
            let viewModel = Login.ExistingInfo.ViewModel(userName: userName, password: password)
            viewController?.displayExistingLoginInfo(viewModel: viewModel)
        }
    }
    
    func presentLoginErrorMessage(response: Login.Login.Response) {
        let viewModel = Login.Login.ViewModelFailedLogin(message: response.message ?? "Something unexpected happened")
        viewController?.displayLoginErrorMessage(viewModel: viewModel)
    }
    
    func presentLoginSuccesfull(response: Login.Login.Response) {
        guard let user = response.user else {
            let viewModel = Login.Login.ViewModelFailedLogin(message: response.message ?? "Something unexpected happened")
            viewController?.displayLoginErrorMessage(viewModel: viewModel)
            return
        }
        
        let viewModel = Login.Login.ViewModelSuccessfullLogin(userId: user.userId)
        viewController?.displaySuccessfullLogin(viewModel: viewModel)
    }
}
